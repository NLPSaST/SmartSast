{
  "ID": "125",
  "Name": "Out-of-bounds Read",
  "Abstraction": "Base",
  "Structure": "Simple",
  "Status": "Draft",
  "Diagram": "/data/images/CWE-125-Diagram.png",
  "Description": "The product reads data past the end, or before the beginning, of the intended buffer.",
  "RelatedWeaknesses.0.Nature": "ChildOf",
  "RelatedWeaknesses.0.CweID": "119",
  "RelatedWeaknesses.0.ViewID": "1000",
  "RelatedWeaknesses.0.Ordinal": "Primary",
  "RelatedWeaknesses.1.Nature": "ChildOf",
  "RelatedWeaknesses.1.CweID": "119",
  "RelatedWeaknesses.1.ViewID": "1003",
  "RelatedWeaknesses.1.Ordinal": "Primary",
  "RelatedWeaknesses.2.Nature": "ChildOf",
  "RelatedWeaknesses.2.CweID": "119",
  "RelatedWeaknesses.2.ViewID": "1305",
  "RelatedWeaknesses.2.Ordinal": "Primary",
  "RelatedWeaknesses.3.Nature": "ChildOf",
  "RelatedWeaknesses.3.CweID": "119",
  "RelatedWeaknesses.3.ViewID": "1340",
  "RelatedWeaknesses.3.Ordinal": "Primary",
  "WeaknessOrdinalities.0.Ordinality": "Resultant",
  "WeaknessOrdinalities.0.Description": "When an out-of-bounds read occurs, typically the product has already made a separate mistake, such as modifying an index or performing pointer arithmetic that produces an out-of-bounds address.",
  "WeaknessOrdinalities.1.Ordinality": "Primary",
  "ApplicablePlatforms.0.Type": "Language",
  "ApplicablePlatforms.0.Name": "C",
  "ApplicablePlatforms.0.Prevalence": "Undetermined",
  "ApplicablePlatforms.1.Type": "Language",
  "ApplicablePlatforms.1.Name": "C++",
  "ApplicablePlatforms.1.Prevalence": "Undetermined",
  "ApplicablePlatforms.2.Type": "Technology",
  "ApplicablePlatforms.2.Class": "ICS/OT",
  "ApplicablePlatforms.2.Prevalence": "Often",
  "AlternateTerms.0.Term": "OOB read",
  "AlternateTerms.0.Description": "Shorthand for \"Out of bounds\" read",
  "ModesOfIntroduction.0.Phase": "Implementation",
  "CommonConsequences.0.Scope.0": "Confidentiality",
  "CommonConsequences.0.Impact.0": "Read Memory",
  "CommonConsequences.0.Note": "An attacker could get secret values such as cryptographic keys, PII, memory addresses, or other information that could be used in additional attacks.",
  "CommonConsequences.1.Scope.0": "Confidentiality",
  "CommonConsequences.1.Impact.0": "Bypass Protection Mechanism",
  "CommonConsequences.1.Note": "Out-of-bounds memory could contain memory addresses or other information that can be used to bypass ASLR and other protection mechanisms in order to improve the reliability of exploiting a separate weakness for code execution.",
  "CommonConsequences.2.Scope.0": "Availability",
  "CommonConsequences.2.Impact.0": "DoS: Crash, Exit, or Restart",
  "CommonConsequences.2.Note": "An attacker could cause a segmentation fault or crash by causing memory to be read outside of the bounds of the buffer. This is especially likely when the code reads a variable amount of data and assumes that a sentinel exists to stop the read operation, such as a NUL in a string.",
  "CommonConsequences.3.Scope.0": "Other",
  "CommonConsequences.3.Impact.0": "Varies by Context",
  "CommonConsequences.3.Note": "The read operation could produce other undefined or unexpected results.",
  "DetectionMethods.0.DetectionMethodID": "DM-13",
  "DetectionMethods.0.Method": "Fuzzing",
  "DetectionMethods.0.Description": "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
  "DetectionMethods.0.Effectiveness": "High",
  "DetectionMethods.1.DetectionMethodID": "DM-14",
  "DetectionMethods.1.Method": "Automated Static Analysis",
  "DetectionMethods.1.Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
  "DetectionMethods.1.Effectiveness": "High",
  "PotentialMitigations.0.MitigationID": "MIT-5",
  "PotentialMitigations.0.Phase.0": "Implementation",
  "PotentialMitigations.0.Strategy": "Input Validation",
  "PotentialMitigations.0.Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nTo reduce the likelihood of introducing an out-of-bounds read, ensure that you validate and ensure correct calculations for any length argument, buffer size calculation, or offset. Be especially careful of relying on a sentinel (i.e. special character such as NUL) in untrusted inputs.\n",
  "PotentialMitigations.1.Phase.0": "Architecture and Design",
  "PotentialMitigations.1.Strategy": "Language Selection",
  "PotentialMitigations.1.Description": "Use a language that provides appropriate memory abstractions.",
  "DemonstrativeExamples.0.ID": "DX-100",
  "DemonstrativeExamples.0.Entries.0.IntroText": "In the following code, the method retrieves a value from an array at a specific array index location that is given as an input parameter to the method",
  "DemonstrativeExamples.0.Entries.1.Nature": "Bad",
  "DemonstrativeExamples.0.Entries.1.Language": "C",
  "DemonstrativeExamples.0.Entries.1.ExampleCode": "```\n\tint getValueFromArray(int *array, int len, int index) {\n\t\t\tint value;\n```\n// check that the array index is less than the maximum* \n\t\t\t\n\t\t\t\n\t\t\t *// length of the array* \n\t\t\tif (index < len) {\n\t\t\t```\n```\n// get the value at the specified index of the array* \n\t\t\t\t\tvalue = array[index];}\n\t\t\t\n\t\t\t *// if array index is invalid then output error message* \n\t\t\t\n\t\t\t\n\t\t\t *// and return value indicating error* \n\t\t\telse {\n\t\t\t```\n\t\t\t\tprintf(\"Value is: %d\\n\", array[index]);\n\t\t\t\tvalue = -1;\n\t\t\t}\n\t\t\treturn value;\n\t}\n```",
  "DemonstrativeExamples.0.Entries.2.BodyText": "However, this method only verifies that the given array index is less than the maximum length of the array but does not check for the minimum value (CWE-839). This will allow a negative value to be accepted as the input array index, which will result in a out of bounds read (CWE-125) and may allow access to sensitive memory. The input array index should be checked to verify that is within the maximum and minimum range required for the array (CWE-129). In this example the if statement should be modified to include a minimum range check, as shown below.",
  "DemonstrativeExamples.0.Entries.3.Nature": "Good",
  "DemonstrativeExamples.0.Entries.3.Language": "C",
  "DemonstrativeExamples.0.Entries.3.ExampleCode": "```\n\t...\n```\n// check that the array index is within the correct* \n\t\n\t\n\t *// range of values for the array* \n\tif (index >= 0 && index < len) {\n\t\n\t...",
  "ObservedExamples.0.Reference": "CVE-2023-1018",
  "ObservedExamples.0.Description": "The reference implementation code for a Trusted Platform Module does not implement length checks on data, allowing for an attacker to read 2 bytes past the end of a buffer.",
  "ObservedExamples.0.Link": "https://www.cve.org/CVERecord?id=CVE-2023-1018",
  "ObservedExamples.1.Reference": "CVE-2020-11899",
  "ObservedExamples.1.Description": "Out-of-bounds read in IP stack used in embedded systems, as exploited in the wild per CISA KEV.",
  "ObservedExamples.1.Link": "https://www.cve.org/CVERecord?id=CVE-2020-11899",
  "ObservedExamples.2.Reference": "CVE-2014-0160",
  "ObservedExamples.2.Description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.",
  "ObservedExamples.2.Link": "https://www.cve.org/CVERecord?id=CVE-2014-0160",
  "ObservedExamples.3.Reference": "CVE-2021-40985",
  "ObservedExamples.3.Description": "HTML conversion package has a buffer under-read, allowing a crash",
  "ObservedExamples.3.Link": "https://www.cve.org/CVERecord?id=CVE-2021-40985",
  "ObservedExamples.4.Reference": "CVE-2018-10887",
  "ObservedExamples.4.Description": "Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)",
  "ObservedExamples.4.Link": "https://www.cve.org/CVERecord?id=CVE-2018-10887",
  "ObservedExamples.5.Reference": "CVE-2009-2523",
  "ObservedExamples.5.Description": "Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122).",
  "ObservedExamples.5.Link": "https://www.cve.org/CVERecord?id=CVE-2009-2523",
  "ObservedExamples.6.Reference": "CVE-2018-16069",
  "ObservedExamples.6.Description": "Chain: series of floating-point precision errors (CWE-1339) in a web browser rendering engine causes out-of-bounds read (CWE-125), giving access to cross-origin data",
  "ObservedExamples.6.Link": "https://www.cve.org/CVERecord?id=CVE-2018-16069",
  "ObservedExamples.7.Reference": "CVE-2004-0112",
  "ObservedExamples.7.Description": "out-of-bounds read due to improper length check",
  "ObservedExamples.7.Link": "https://www.cve.org/CVERecord?id=CVE-2004-0112",
  "ObservedExamples.8.Reference": "CVE-2004-0183",
  "ObservedExamples.8.Description": "packet with large number of specified elements cause out-of-bounds read.",
  "ObservedExamples.8.Link": "https://www.cve.org/CVERecord?id=CVE-2004-0183",
  "ObservedExamples.9.Reference": "CVE-2004-0221",
  "ObservedExamples.9.Description": "packet with large number of specified elements cause out-of-bounds read.",
  "ObservedExamples.9.Link": "https://www.cve.org/CVERecord?id=CVE-2004-0221",
  "ObservedExamples.10.Reference": "CVE-2004-0184",
  "ObservedExamples.10.Description": "out-of-bounds read, resultant from integer underflow",
  "ObservedExamples.10.Link": "https://www.cve.org/CVERecord?id=CVE-2004-0184",
  "ObservedExamples.11.Reference": "CVE-2004-1940",
  "ObservedExamples.11.Description": "large length value causes out-of-bounds read",
  "ObservedExamples.11.Link": "https://www.cve.org/CVERecord?id=CVE-2004-1940",
  "ObservedExamples.12.Reference": "CVE-2004-0421",
  "ObservedExamples.12.Description": "malformed image causes out-of-bounds read",
  "ObservedExamples.12.Link": "https://www.cve.org/CVERecord?id=CVE-2004-0421",
  "ObservedExamples.13.Reference": "CVE-2008-4113",
  "ObservedExamples.13.Description": "OS kernel trusts userland-supplied length value, allowing reading of sensitive information",
  "ObservedExamples.13.Link": "https://www.cve.org/CVERecord?id=CVE-2008-4113",
  "TaxonomyMappings.0.TaxonomyName": "PLOVER",
  "TaxonomyMappings.0.EntryName": "Out-of-bounds Read",
  "TaxonomyMappings.1.TaxonomyName": "CERT C Secure Coding",
  "TaxonomyMappings.1.EntryID": "ARR30-C",
  "TaxonomyMappings.1.EntryName": "Do not form or use out-of-bounds pointers or array subscripts",
  "TaxonomyMappings.1.MappingFit": "Imprecise",
  "TaxonomyMappings.2.TaxonomyName": "CERT C Secure Coding",
  "TaxonomyMappings.2.EntryID": "ARR38-C",
  "TaxonomyMappings.2.EntryName": "Guarantee that library functions do not form invalid pointers",
  "TaxonomyMappings.2.MappingFit": "Imprecise",
  "TaxonomyMappings.3.TaxonomyName": "CERT C Secure Coding",
  "TaxonomyMappings.3.EntryID": "EXP39-C",
  "TaxonomyMappings.3.EntryName": "Do not access a variable through a pointer of an incompatible type",
  "TaxonomyMappings.3.MappingFit": "Imprecise",
  "TaxonomyMappings.4.TaxonomyName": "CERT C Secure Coding",
  "TaxonomyMappings.4.EntryID": "STR31-C",
  "TaxonomyMappings.4.EntryName": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
  "TaxonomyMappings.4.MappingFit": "Imprecise",
  "TaxonomyMappings.5.TaxonomyName": "CERT C Secure Coding",
  "TaxonomyMappings.5.EntryID": "STR32-C",
  "TaxonomyMappings.5.EntryName": "Do not pass a non-null-terminated character sequence to a library function that expects a string",
  "TaxonomyMappings.5.MappingFit": "CWE More Abstract",
  "TaxonomyMappings.6.TaxonomyName": "Software Fault Patterns",
  "TaxonomyMappings.6.EntryID": "SFP8",
  "TaxonomyMappings.6.EntryName": "Faulty Buffer Access",
  "RelatedAttackPatterns.0": "540",
  "References.0.ExternalReferenceID": "REF-1034",
  "References.0.Authors.0": "Raoul Strackx",
  "References.0.Authors.1": "Yves Younan",
  "References.0.Authors.2": "Pieter Philippaerts",
  "References.0.Authors.3": "Frank Piessens",
  "References.0.Authors.4": "Sven Lachmund",
  "References.0.Authors.5": "Thomas Walter",
  "References.0.Title": "Breaking the memory secrecy assumption",
  "References.0.PublicationYear": "2009",
  "References.0.PublicationMonth": "03",
  "References.0.PublicationDay": "31",
  "References.0.Publisher": "ACM",
  "References.0.URL": "https://dl.acm.org/doi/10.1145/1519144.1519145",
  "References.0.URLDate": "2023-04-07",
  "References.1.ExternalReferenceID": "REF-1035",
  "References.1.Authors.0": "Fermin J. Serna",
  "References.1.Title": "The info leak era on software exploitation",
  "References.1.PublicationYear": "2012",
  "References.1.PublicationMonth": "07",
  "References.1.PublicationDay": "25",
  "References.1.URL": "https://media.blackhat.com/bh-us-12/Briefings/Serna/BH_US_12_Serna_Leak_Era_Slides.pdf",
  "References.2.ExternalReferenceID": "REF-44",
  "References.2.Section": "\"Sin 5: Buffer Overruns.\" Page 89",
  "References.2.Authors.0": "Michael Howard",
  "References.2.Authors.1": "David LeBlanc",
  "References.2.Authors.2": "John Viega",
  "References.2.Title": "24 Deadly Sins of Software Security",
  "References.2.Publication": "McGraw-Hill",
  "References.2.PublicationYear": "2010",
  "MappingNotes.Usage": "Allowed",
  "MappingNotes.Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
  "MappingNotes.Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
  "MappingNotes.Reasons.0": "Acceptable-Use",
  "ContentHistory.0.Type": "Submission",
  "ContentHistory.0.SubmissionName": "PLOVER",
  "ContentHistory.0.SubmissionDate": "2006-07-19",
  "ContentHistory.0.SubmissionVersion": "Draft 3",
  "ContentHistory.0.SubmissionReleaseDate": "2006-07-19",
  "ContentHistory.1.Type": "Modification",
  "ContentHistory.1.ModificationName": "CWE Content Team",
  "ContentHistory.1.ModificationOrganization": "MITRE",
  "ContentHistory.1.ModificationDate": "2008-09-08",
  "ContentHistory.1.ModificationComment": "updated Applicable_Platforms, Relationships, Taxonomy_Mappings, Weakness_Ordinalities",
  "ContentHistory.2.Type": "Modification",
  "ContentHistory.2.ModificationName": "CWE Content Team",
  "ContentHistory.2.ModificationOrganization": "MITRE",
  "ContentHistory.2.ModificationDate": "2009-10-29",
  "ContentHistory.2.ModificationComment": "updated Description",
  "ContentHistory.3.Type": "Modification",
  "ContentHistory.3.ModificationName": "CWE Content Team",
  "ContentHistory.3.ModificationOrganization": "MITRE",
  "ContentHistory.3.ModificationDate": "2010-09-27",
  "ContentHistory.3.ModificationComment": "updated Relationships",
  "ContentHistory.4.Type": "Modification",
  "ContentHistory.4.ModificationName": "CWE Content Team",
  "ContentHistory.4.ModificationOrganization": "MITRE",
  "ContentHistory.4.ModificationDate": "2011-06-01",
  "ContentHistory.4.ModificationComment": "updated Common_Consequences",
  "ContentHistory.5.Type": "Modification",
  "ContentHistory.5.ModificationName": "CWE Content Team",
  "ContentHistory.5.ModificationOrganization": "MITRE",
  "ContentHistory.5.ModificationDate": "2012-05-11",
  "ContentHistory.5.ModificationComment": "updated Demonstrative_Examples, References, Relationships",
  "ContentHistory.6.Type": "Modification",
  "ContentHistory.6.ModificationName": "CWE Content Team",
  "ContentHistory.6.ModificationOrganization": "MITRE",
  "ContentHistory.6.ModificationDate": "2014-06-23",
  "ContentHistory.6.ModificationComment": "updated Related_Attack_Patterns",
  "ContentHistory.7.Type": "Modification",
  "ContentHistory.7.ModificationName": "CWE Content Team",
  "ContentHistory.7.ModificationOrganization": "MITRE",
  "ContentHistory.7.ModificationDate": "2014-07-30",
  "ContentHistory.7.ModificationComment": "updated Relationships, Taxonomy_Mappings",
  "ContentHistory.8.Type": "Modification",
  "ContentHistory.8.ModificationName": "CWE Content Team",
  "ContentHistory.8.ModificationOrganization": "MITRE",
  "ContentHistory.8.ModificationDate": "2015-12-07",
  "ContentHistory.8.ModificationComment": "updated Relationships",
  "ContentHistory.9.Type": "Modification",
  "ContentHistory.9.ModificationName": "CWE Content Team",
  "ContentHistory.9.ModificationOrganization": "MITRE",
  "ContentHistory.9.ModificationDate": "2017-11-08",
  "ContentHistory.9.ModificationComment": "updated Causal_Nature, Observed_Examples, Taxonomy_Mappings",
  "ContentHistory.10.Type": "Modification",
  "ContentHistory.10.ModificationName": "CWE Content Team",
  "ContentHistory.10.ModificationOrganization": "MITRE",
  "ContentHistory.10.ModificationDate": "2018-03-27",
  "ContentHistory.10.ModificationComment": "updated Description",
  "ContentHistory.11.Type": "Modification",
  "ContentHistory.11.ModificationName": "CWE Content Team",
  "ContentHistory.11.ModificationOrganization": "MITRE",
  "ContentHistory.11.ModificationDate": "2019-01-03",
  "ContentHistory.11.ModificationComment": "updated Relationships",
  "ContentHistory.12.Type": "Modification",
  "ContentHistory.12.ModificationName": "CWE Content Team",
  "ContentHistory.12.ModificationOrganization": "MITRE",
  "ContentHistory.12.ModificationDate": "2019-06-20",
  "ContentHistory.12.ModificationComment": "updated Description, Related_Attack_Patterns",
  "ContentHistory.13.Type": "Modification",
  "ContentHistory.13.ModificationName": "CWE Content Team",
  "ContentHistory.13.ModificationOrganization": "MITRE",
  "ContentHistory.13.ModificationDate": "2019-09-19",
  "ContentHistory.13.ModificationComment": "updated Common_Consequences, Observed_Examples, Potential_Mitigations, References, Relationships",
  "ContentHistory.14.Type": "Modification",
  "ContentHistory.14.ModificationName": "CWE Content Team",
  "ContentHistory.14.ModificationOrganization": "MITRE",
  "ContentHistory.14.ModificationDate": "2020-02-24",
  "ContentHistory.14.ModificationComment": "updated Potential_Mitigations, Relationships, Taxonomy_Mappings",
  "ContentHistory.15.Type": "Modification",
  "ContentHistory.15.ModificationName": "CWE Content Team",
  "ContentHistory.15.ModificationOrganization": "MITRE",
  "ContentHistory.15.ModificationDate": "2020-06-25",
  "ContentHistory.15.ModificationComment": "updated Observed_Examples, Potential_Mitigations",
  "ContentHistory.16.Type": "Modification",
  "ContentHistory.16.ModificationName": "CWE Content Team",
  "ContentHistory.16.ModificationOrganization": "MITRE",
  "ContentHistory.16.ModificationDate": "2020-08-20",
  "ContentHistory.16.ModificationComment": "updated Observed_Examples, Potential_Mitigations, Relationships",
  "ContentHistory.17.Type": "Modification",
  "ContentHistory.17.ModificationName": "CWE Content Team",
  "ContentHistory.17.ModificationOrganization": "MITRE",
  "ContentHistory.17.ModificationDate": "2020-12-10",
  "ContentHistory.17.ModificationComment": "updated Related_Attack_Patterns, Relationships",
  "ContentHistory.18.Type": "Modification",
  "ContentHistory.18.ModificationName": "CWE Content Team",
  "ContentHistory.18.ModificationOrganization": "MITRE",
  "ContentHistory.18.ModificationDate": "2021-07-20",
  "ContentHistory.18.ModificationComment": "updated Observed_Examples, Relationships",
  "ContentHistory.19.Type": "Modification",
  "ContentHistory.19.ModificationName": "CWE Content Team",
  "ContentHistory.19.ModificationOrganization": "MITRE",
  "ContentHistory.19.ModificationDate": "2022-04-28",
  "ContentHistory.19.ModificationComment": "updated Research_Gaps",
  "ContentHistory.20.Type": "Modification",
  "ContentHistory.20.ModificationName": "CWE Content Team",
  "ContentHistory.20.ModificationOrganization": "MITRE",
  "ContentHistory.20.ModificationDate": "2022-06-28",
  "ContentHistory.20.ModificationComment": "updated Observed_Examples, Relationships",
  "ContentHistory.21.Type": "Modification",
  "ContentHistory.21.ModificationName": "CWE Content Team",
  "ContentHistory.21.ModificationOrganization": "MITRE",
  "ContentHistory.21.ModificationDate": "2022-10-13",
  "ContentHistory.21.ModificationComment": "updated Applicable_Platforms, Relationships, Taxonomy_Mappings",
  "ContentHistory.22.Type": "Modification",
  "ContentHistory.22.ModificationName": "CWE Content Team",
  "ContentHistory.22.ModificationOrganization": "MITRE",
  "ContentHistory.22.ModificationDate": "2023-01-31",
  "ContentHistory.22.ModificationComment": "updated Description",
  "ContentHistory.23.Type": "Modification",
  "ContentHistory.23.ModificationName": "CWE Content Team",
  "ContentHistory.23.ModificationOrganization": "MITRE",
  "ContentHistory.23.ModificationDate": "2023-04-27",
  "ContentHistory.23.ModificationComment": "updated Detection_Factors, References, Relationships",
  "ContentHistory.24.Type": "Modification",
  "ContentHistory.24.ModificationName": "CWE Content Team",
  "ContentHistory.24.ModificationOrganization": "MITRE",
  "ContentHistory.24.ModificationDate": "2023-06-29",
  "ContentHistory.24.ModificationComment": "updated Mapping_Notes, Relationships",
  "ContentHistory.25.Type": "Modification",
  "ContentHistory.25.ModificationName": "CWE Content Team",
  "ContentHistory.25.ModificationOrganization": "MITRE",
  "ContentHistory.25.ModificationDate": "2023-10-26",
  "ContentHistory.25.ModificationComment": "updated Observed_Examples",
  "ContentHistory.26.Type": "Modification",
  "ContentHistory.26.ModificationName": "CWE Content Team",
  "ContentHistory.26.ModificationOrganization": "MITRE",
  "ContentHistory.26.ModificationDate": "2024-07-16",
  "ContentHistory.26.ModificationComment": "updated Alternate_Terms, Common_Consequences, Description, Diagram, Weakness_Ordinalities",
  "ContentHistory.26.ModificationVersion": "4.15",
  "ContentHistory.26.ModificationReleaseDate": "2024-07-16",
  "ContentHistory.27.Type": "Modification",
  "ContentHistory.27.ModificationName": "CWE Content Team",
  "ContentHistory.27.ModificationOrganization": "MITRE",
  "ContentHistory.27.ModificationDate": "2024-11-19",
  "ContentHistory.27.ModificationComment": "updated Observed_Examples, Relationships",
  "ContentHistory.27.ModificationVersion": "4.16",
  "ContentHistory.27.ModificationReleaseDate": "2024-11-19",
  "ContentHistory.28.Type": "Contribution",
  "ContentHistory.28.ContributionName": "Abhi Balakrishnan",
  "ContentHistory.28.ContributionDate": "2024-02-29",
  "ContentHistory.28.ContributionComment": "Provided diagram to improve CWE usability",
  "ContentHistory.28.ContributionType": "Content",
  "ContentHistory.28.ContributionVersion": "4.15",
  "ContentHistory.28.ContributionReleaseDate": "2024-07-16"
}